{"version":3,"sources":["components/Card.js","cards.js","components/Content.js","components/Header.js","components/Container.js","components/App.js","serviceWorker.js","index.js","img/funbox_logo.png"],"names":["handleOnClick","this","state","isDisabled","isSelected","setState","isSelectedHover","Card","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","card","cardClass","classNames","card__selected","card__disabled","card__selected__hover","react_default","a","createElement","className","onClick","bind","onMouseOver","onMouseOut","subtitle","consist","map","item","index","key","src","funbox_logo","alt","weight","width","height","stroke","strokeWidth","fill","d","description","href","React","Component","cards","id","title","Content","components_Card","Header","Container","components_Header","components_Content","App","components_Container","render","document","getElementById","Boolean","window","location","hostname","match","ReactDOM","components_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.1ec86e1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport funbox_logo from '../img/funbox_logo.png';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst propTypes  = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    consist: PropTypes.array,\r\n    description: PropTypes.string,\r\n    weight: PropTypes.number,\r\n    isDisabled: PropTypes.bool\r\n}\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isSelected: false, isSelectedHover: false, isDisabled: false};\r\n    }\r\n    componentWillMount() {\r\n        if(this.props.card.isDisabled)\r\n            this.setState({isDisabled: true});\r\n    }\r\n    render() {\r\n        const {card} = this.props;\r\n        \r\n        var cardClass = classNames('card', {\r\n            'card__selected': this.state.isSelected,\r\n            'card__disabled': this.state.isDisabled,\r\n            'card__selected__hover': this.state.isSelectedHover\r\n        });\r\n        \r\n        return (\r\n            <div className={cardClass}>\r\n                <div className=\"card__wrapper\" onClick={ handleOnClick.bind(this) } onMouseOver={handleOnMouseOver.bind(this)} onMouseOut={handleOnMouseOut.bind(this)}>\r\n                    <div className=\"card__content\">\r\n                        <div className=\"card__subtitle\">{this.state.isSelectedHover ? 'Котэ не одобряет?': 'Сказочное заморское яство'}</div>\r\n                        <div className=\"card__title\">\r\n                            <h2>Нямушка</h2>\r\n                            <span>{card.subtitle}</span>\r\n                        </div>\r\n                        <div className=\"card__consist\">\r\n                            {card.consist.map((item, index) => <p key={index} >{item}</p>)}\r\n                        </div>\r\n                    </div>\r\n                    <img src= {funbox_logo} alt=\"\"/>\r\n                    <div className=\"circle\">\r\n                        <span>{card.weight}</span>\r\n                        <span>кг</span>    \r\n                    </div>\r\n                    <svg  className=\"stroke\" width=\"326px\" height=\"486px\">\r\n                            <path stroke=\"rgb(22, 152, 217)\" strokeWidth=\"4px\" fill=\"none\" d=\"M310.000,482.000 L14.000,482.000 C7.373,482.000 2.000,476.627 2.000,470.000 L2.000,45.000 L45.000,2.000 L310.000,2.000 C316.627,2.000 322.000,7.372 322.000,14.000 L322.000,470.000 C322.000,476.627 316.627,482.000 310.000,482.000 Z\"/>\r\n                    </svg>\r\n                    <svg width=\"326px\" height=\"486px\">\r\n                            <path strokeWidth=\"4px\" fill=\"rgb(242, 242, 242)\" d=\"M310.000,482.000 L14.000,482.000 C7.373,482.000 2.000,476.627 2.000,470.000 L2.000,45.000 L45.000,2.000 L310.000,2.000 C316.627,2.000 322.000,7.372 322.000,14.000 L322.000,470.000 C322.000,476.627 316.627,482.000 310.000,482.000 Z\"/>\r\n                    </svg>\r\n                  \r\n                </div>\r\n                <div className=\"card__footer\">\r\n                    {this.state.isSelected && (<p>{card.description}</p>)} \r\n                    {(!this.state.isDisabled && !this.state.isSelected)  && (<p>Чего сидишь? Порадуй котэ <a href=\"#\" onClick={ handleOnClick.bind(this) }>купи.</a></p>) }\r\n                    {this.state.isDisabled && (<p>Печалька, {card.subtitle} закончился</p>)} \r\n                </div>\r\n            </div>\r\n          );\r\n          \r\n    }\r\n\r\n}\r\nfunction handleOnClick() {\r\n    if(!this.state.isDisabled) \r\n        if (!this.state.isSelected) {\r\n            this.setState({isSelected: true});\r\n        }   \r\n        else {\r\n            this.setState({isSelected: false});\r\n            this.setState({isSelectedHover: false});\r\n        }\r\n}\r\n\r\nfunction handleOnMouseOver() {\r\n    if (this.state.isSelected) {\r\n        this.setState({isSelectedHover: true});\r\n    } else\r\n        this.setState({isSelectedHover: false});\r\n}\r\n\r\nfunction handleOnMouseOut() {\r\n    this.setState({isSelectedHover: false});\r\n}\r\nCard.propTypes = propTypes\r\nexport default Card;","export default [\r\n    {\r\n        \"id\": \"0\",\r\n        \"title\": \"Нямушка\",\r\n        \"subtitle\": \"с фуа-гра\",\r\n        \"consist\": [\"10 порций\", \"мышь в подарок\"],\r\n        \"description\": \"Печень утки разварная с артишоками.\",\r\n        \"weight\": \"0,5\",\r\n        \"isDisabled\": false\r\n    },\r\n    {\r\n        \"id\": \"1\",\r\n        \"title\": \"Нямушка\",\r\n        \"subtitle\": \"с рыбой\",\r\n        \"consist\": [\"40 порций\", \"2 мыши в подарок\"],\r\n        \"description\": \"Головы щучьи с чесноком да свежайшая сёмгушка.\",\r\n        \"weight\": \"2\",\r\n        \"isDisabled\": false\r\n    },\r\n    {\r\n        \"id\": \"2\",\r\n        \"title\": \"Нямушка\",\r\n        \"subtitle\": \"с курицей\",\r\n        \"consist\": [\"100 порций\", \"5 мышей в подарок\", \"заказчик доволен\"],\r\n        \"description\": \"Филе из цыплят с трюфелями в бульоне.\",\r\n        \"weight\": \"5\",\r\n        \"isDisabled\": true\r\n    }\r\n]","import React from 'react';\r\nimport Card from './Card';\r\nimport cards from '../cards'\r\n\r\n\r\nfunction Content() {\r\n    return (\r\n      <div className=\"content\">\r\n        <Card card={cards[0]} />\r\n        <Card card={cards[1]} />\r\n        <Card card={cards[2]} />\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n      <div className=\"header\">\r\n        <h1>Ты сегодня покормил кота?</h1>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Content from '../components/Content';\r\nimport Header from '../components/Header'; \r\n\r\nfunction Container() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Content />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\nimport {render} from 'react-dom';\nimport Container from '../components/Container'; \n\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Container/>\n      </div>\n    );\n}\nrender(<App/>, document.getElementById('root'))\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './scss/main.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/funbox_logo.38a2d03d.png\";"],"sourceRoot":""}